# --------------------------------------------------------------
# Trace Version 2.0
# --------------------------------------------------------------
# Properties for package com.wn.retail.util.trace
# ================================================
#
# This file defines, which trace messages are written to which destinations.
#
# Syntax of file
# --------------
#
#. profiles = profile1, profile2, ...
#.
#. profile1.filter.scope      = user, internal, all
#. profile1.filter.categories = method, event, exception, status, instance,
#.                              database, special, all
#. profile1.filter.modules    = <module1>, <module2>, ..., all
#. profile1.output.target     = stdout, stderr, <file>
#. profile1.output.filesize   	= only valid for <file>
#.				 - filesize == 0   : no limit for filesize
#.						   : trace works only with 1 file
#.				 - filesize >  0   : trace works with more files 
#.				 - filesize > 0 && < 5: filesize = 5 (KBytes)
#. profile1.output.filesnumber  = only valid for <file> and (filesize > 0)
#.				 - filesnumber <= 2   : filesnumber = 2 
#.				 - filesnumber >  5   : filesnumber = 5 
#. profile1.output.fields     = time, scope, category, module[:n], thread[:n],
#.                              message[:n], all
#. profile1.output.separator  = <string>
#. profile1.output.append     = true, false, yes, no
#.
#. profile2.filter.scope      = ...
#. profile2.filter.category   = ...
#. ...
#
# Hints
# -----
#
# Several or all entries of a profile can be omitted. Missing entries are
# replaced by their default. The defaults are:
#
#   filter.scope      = all
#   filter.categories = all
#   filter.modules    = all
#   output.target     = stdout
#   output.filesize   = 0	// only valid for <file>
#   output.fields     = all
#   output.separator  = " : "
#   output.append     = yes
#
# The defaults are also used in the case of an syntax error.
#
# The width of the output fields module, thread, and message can be specified
# by a colon (:) followed by a number. The default is variable width.
#
# Directory separators used for the output file must always be slashes (/).
#
# Leading and trailing blanks for the output separator must be enclosed by
# quotes (").


# Uncomment the following line to activate the trace
#profiles = profile1

profile1.filter.scope      =all
# , user, internal, all
profile1.filter.categories = method, event, exception
# , status, instance,    database, special, all

# SOME MODULE DEFINITIONS: take care that only ONE line of type 'profile1.filter.modules'
# is enabled
#profile1.filter.modules    =DC-POSPrinter, WN-CommAPI
profile1.filter.modules  = DCAL-WNPOSKeyboard, WN-CommAPI
#
#profile1.filter.modules    = TraceTester
#profile1.filter.modules    =  DCAL-WNPOSPrinterND77,DS-WNKeylock, DCAL-WNKeylock
#profile1.filter.modules    =  DS-WNPOSPrinterND77,  DS-WNCashDrawer, DCAL-WNCashDrawer
#profile1.filter.modules    =  DC-Scanner, DS-WNScanner, DCAL-WNScanner, DC-CashDrawer, DS-WNCashDrawer, DCAL-WNCashDrawer
#profile1.filter.modules    =  DC-POSPrinter, DS-WNPOSPrinterND77, DCAL-WNPOSPrinterND77
#profile1.filter.modules    =  DC-Keylock, DS-WNKeylock, DCAL-WNKeylock
#profile1.filter.modules    =  DC-CashDrawer, DS-WNCashDrawer, DCAL-WNCashDrawer



# ADDITIONAL TRACE SWITCHES:
#For Windows NT use:
#profile1.output.target     = C:/Retail/Software/javapos/wn/doc/usrtrace.txt
#profile1.output.filesize   = 10	
#profile1.output.filesnumber= 5
#   For LINUX use:
#profile1.output.target     = /usr/local/javapos/wn/doc/usrtrace.txt
profile1.output.target     =stdout
profile1.output.filesize  = 0		// (KBytes) multiple trace files deactivated
#profile1.output.fields     = time, scope, category, module:20, thread:15,  message
profile1.output.fields     =time, module, thread, message
profile1.output.separator  = "| "
profile1.output.append     =true

# -------------------------------------
# --static profile used by JaRTPack tool--
# -------------------------------------
profile_static.filter.scope      = user
profile_static.filter.categories = method, event, exception
profile_static.filter.modules    =  WN-CommAPI, DC-POSPrinter, DC-POSKeyboard
profile_static.output.target     = stdout
profile_static.output.filesize   = 0	// new: only valid for <file>

profile_static.output.fields     =  module:20,  thread:15, time, message
profile_static.output.separator  = "| "
profile_static.output.append     = true


# #####################################################
# # AVAILABLE TRACE MODULE DEFINITIONS IN WN JavaPOS ##

# TRACE MODULE NAME                  Module
# all                                Switching on all modules..
# DC-POSPrinter                      Device Control POSPrinter
# DC-FiscalPrinter                   Device Control FiscalPrinter
# DC-CashDrawer                      Device Control CashDrawer
# DC-CashChanger                     Device Control CashChanger
# DC-LineDisplay                     Device Control LineDisplay
# DC-Scanner                         Device Control Scanner
# DC-MSR                             Device Control Magnetic Swipe Reader
# DC-MICR                            Device Control Magnetic Inc Character reader
# DC-POSKeyboard                     Device Control POSKeyboard
# DC-Keylock                         Device Control Keylock
# DC-Scale                           Device Control Scale
# DC-ToneIndicator                   Device Control ToneIndicator
# DC-POSPower                        Device Control POSPower (UPS)
# DC-HardTotals                      Device Control HardTotals (UPS)
#
# DS-ScaleTransaction               Scale Transaction Module (Wincor Nixdorf)
#
# DS-WNPOSPrinterND77               Device Service ND77 POSPrinter
# DS-WNPOSPrinterND210              Device Service ND210 POSPrinter
# DS-WNPOSPrinterA794               Device Service A794 Receipt POSPrinter
# DS-WNPOSPrinterTH200              Device Service POSPrinter TH200 (Asian printer)
# DS-WNPOSPrinterTHxxx              Device Service POSPrinter TH210, TH220, TH320, TH420
# DS-WNPOSPrinterTP07               Device Service Banking Printer TP07
# DS-WNPOSPrinterTH23               Device Service Banking Printer TH23 (Italy)
# DS-WNPOSPrinterLexmarkT640        Device Service Lexmark Laser Printer T640 (USB)
# DS-WNCashDrawer                   Device Service CashDrawer at ND77 or BEETLE Port
# DS-WNMICR                         Device Service MICR in TH320,TH420
# DS-WNFiscalPrinterItaly           Device Service Fiscal Printer for ND77 and FASY Fiscal Printer
# DS-WNElectronicJournalEJTHF       Device Service Electronic Journal of Fiscal Printer for ND77 and FASY Fiscal Printer
# DS-WNLineDisplay                  Device Service LineDisplay of BA63/66
# DS-WNLineDisplayUSB               Device Service LineDisplay of BA63    USB
# DS-WNScannerSE3223                Device Service Wincor Nixdorf Scanner SE3223 of BEETLE iPOS
# DS-WNScanner                      Device Service Wincor Nixdorf Scanners
# DS-WNScannerUSB                   Device Service USB HID Scanners
# DS-WNScannerUSBGryphon            Device Service USB HID Scanners (especially Gryphon USB)
# DS-WNScannerUSBGryphonD120        Device Service USB HID Scanners (especially Gryphon D120 USB)
# DS-WNPowerScan                    Device Service Scanner Power  Scan 2000 (RS232)
# DS-WNPOSKeyboard                  Device Service POSKeyboard of Wincor Nixdorf Keyboards
# DS-WNKeylock                      Device Service Keylock of Wincor Nixdorf Keyboards
# DS-WNMSR                          Device Service MSR of Wincor Nixdorf Keyboards
# DS-WNMSR7816                      Device Service MSR Swipe And Park Reader of Wincor Nixdorf Keyboards
# DS-WNScale                        Device Service Scale following the Check out Dialog 6
# DS-WNPOSPower                     Device Service UPOS POSPower MPS 1064 (BEETLE built-in )
# DS-WNMotionSensor                 Device Service for Motion Sensor connected via RS232 (Certo)
#
# DS-WNElectronicKeylock            Device Service Electronic Keylock as used in SCO
# DS-WNSpecialElectronicUSB         Device Service Special Electronic (USB) as used in SCO
# DS-WNMotorElectronicScharco       Device Service for Motor Control of Belt (RS232) as used in SCO
# DS-WNScaleMettler                 Device Service for Scale of Mettler (RS232)  as used in SCO
# DS-WNScaleMettler1                Device Service for Scale of Mettler (RS232)  as used in SCO (std version)
# DS-WNScalePSC                     Device Service for Scale of PSC (RS232) as used in SCO
# DS-WNScalePSC1                    Device Service for Scale of PSC (RS232) as used in SCO  (std version)
# DS-WNScaleIDNet                   Device Service for Scale of IDnet (RS232) as used in SCO
# DS-WNScaleFLINTEC                 Device Service for Scale of FLINTEC (RS232) as used in SCO
# DS-DS-WNRFIDReader                Device Service for an RFID reader via USB as used in SCO
# DS-WNMSRHS                        Device Service Magnetical Swipe Reader HOPT and Schuler (USB) as used in SCO
# DS-WNMSRV2X                       Device Service Magnetical Swipe Reader OMRON (USB) as used in SCO
# DS-WNPOSPowerMPS1086              Device Service POSPower UPS 1086 (BEETLE E1 via RS232)
#
# DS-DS-CashChangerJCM              Device Service CashChanger for JCM in SCO (RS232)
# DS-DS-CashChangerMUX              Device Service CashChanger (Coin Dispenser and Acceptor for CMIO) in SCO (RS232)
# DS-DS-CashChangerMCS              Device Service CashChanger (Coin Acceptor for CMIO) in SCO (RS232)
# DS-DS-CashChangerTLQ              Device Service CashChanger (Coin Dispenser for Telequip Express) in SCO (RS232)
#
#
# WN-CommAPI                        Comm API implementation of Wincor Nixdorf

